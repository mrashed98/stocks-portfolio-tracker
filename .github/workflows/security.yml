name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Run Nancy (Go dependency scanner)
      run: |
        go install github.com/sonatypecommunity/nancy@latest
        cd backend
        go list -json -deps ./... | nancy sleuth

    - name: Run npm audit (Node.js dependency scanner)
      working-directory: ./frontend
      run: |
        npm install
        npm audit --audit-level=moderate

    - name: Run Snyk for Go
      uses: snyk/actions/golang@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=backend/go.mod

    - name: Run Snyk for Node.js
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=frontend/package.json

  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build backend image
      run: docker build -t portfolio-backend:scan ./backend

    - name: Build frontend image
      run: docker build -t portfolio-frontend:scan ./frontend

    - name: Run Trivy scanner on backend image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'portfolio-backend:scan'
        format: 'sarif'
        output: 'trivy-backend.sarif'

    - name: Run Trivy scanner on frontend image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'portfolio-frontend:scan'
        format: 'sarif'
        output: 'trivy-frontend.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v4
      if: always()
      with:
        sarif_file: 'trivy-backend.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v4
      if: always()
      with:
        sarif_file: 'trivy-frontend.sarif'

  secret-scan:
    name: Secret Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

    - name: Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v4
      with:
        languages: go, javascript

    - name: Autobuild
      uses: github/codeql-action/autobuild@v4

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4